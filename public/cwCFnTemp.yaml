AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  InstanceId:
    Description: "EC2 Instance ID"
    Type: "String"
    Default: "i-0abcdef1234567890"  # 適当なデフォルトのインスタンスID

Mappings:
  AlarmThresholds:
    CPUUtilization:
      Threshold: 80
    DiskReadOps:
      Threshold: 100
    NetworkIn:
      Threshold: 50000

Resources:
  MyAlarm1:
    Type: AWS::CloudWatch::Alarm #こんにちは
    Properties:
      AlarmName: !Sub "${AWS::StackName}-CPUUtilization-Alarm"
      MetricName: "CPUUtilization"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: 300
      EvaluationPeriods: 2
      Threshold: !FindInMap [AlarmThresholds, CPUUtilization, Threshold]
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions: []
      Dimensions:
        - Name: "InstanceId"
          Value: !Ref InstanceId

  MyAlarm2:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-DiskReadOps-Alarm"
      MetricName: "DiskReadOps"
      Namespace: "AWS/EC2"
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 3
      Threshold: !FindInMap [AlarmThresholds, DiskReadOps, Threshold]
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions: []
      Dimensions:
        - Name: "InstanceId"
          Value: !Ref InstanceId

  MyAlarm3:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-NetworkIn-Alarm"
      MetricName: "NetworkIn"
      Namespace: "AWS/EC2"
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 3
      Threshold: !FindInMap [AlarmThresholds, NetworkIn, Threshold]
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions: []
      Dimensions:
        - Name: "InstanceId"
          Value: !Ref InstanceId

  MyEvent1:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${AWS::StackName}-Event1"
      ScheduleExpression: "rate(5 minutes)"
      State: "ENABLED"
      Targets: []

  MyEvent2:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${AWS::StackName}-Event2"
      ScheduleExpression: "rate(1 hour)"
      State: "ENABLED"
      Targets: []

  MyEvent3:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${AWS::StackName}-Event3"
      ScheduleExpression: "rate(1 day)"
      State: "ENABLED"
      Targets: []

  MyLogGroup1:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${AWS::StackName}-LogGroup1"

  MyLogGroup2:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${AWS::StackName}-LogGroup2"

  MyLogGroup3:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${AWS::StackName}-LogGroup3"

Outputs:
  Alarm1Name:
    Description: "Name of the first CloudWatch alarm."
    Value: !Ref MyAlarm1

  Alarm2Name:
    Description: "Name of the second CloudWatch alarm."
    Value: !Ref MyAlarm2

  Alarm3Name:
    Description: "Name of the third CloudWatch alarm."
    Value: !Ref MyAlarm3