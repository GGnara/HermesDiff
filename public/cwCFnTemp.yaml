AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  InstanceId:
    Description: "EC2 Instance ID"
    Type: "String"
    Default: "i-0abcdef1234567890"

Mappings:
  AlarmThresholds:
    CPUUtilization:
      Threshold: 80
    DiskReadOps:
      Threshold: 100
    NetworkIn:
      Threshold: 50000

Resources:
  MyAlarm1:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "${AWS::StackName}-CPUUtilization-Alarm"
      AlarmDescription: "Alarm when CPU exceeds threshold"
      MetricName: "CPUUtilization"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: 300
      EvaluationPeriods: 2
      Threshold: !FindInMap [AlarmThresholds, CPUUtilization, Threshold]
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions:
        - !Ref MySNSTopic1
        - !Ref MySNSTopic2
        - !Ref MySNSTopic3
      InsufficientDataActions: []
      OKActions:
        - !Ref MySNSTopic1
      Dimensions:
        - Name: "InstanceId"
          Value: !Ref InstanceId
      DatapointsToAlarm: 1
      EvaluateLowSampleCountPercentile: "ignore"
      ExtendedStatistic: "p99"
      Metrics: []
      Tags:
        - Key: "Name"
          Value: "CPUAlarm"
      ThresholdMetricId: ""
      TreatMissingData: "notBreaching"
      Unit: "Percent"

  MyAlarm2:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "${AWS::StackName}-DiskReadOps-Alarm"
      AlarmDescription: "Alarm when DiskReadOps exceeds threshold"
      MetricName: "DiskReadOps"
      Namespace: "AWS/EC2"
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 3
      Threshold: !FindInMap [AlarmThresholds, DiskReadOps, Threshold]
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions:
        - !Ref MySNSTopic1
        - !Ref MySNSTopic2
        - !Ref MySNSTopic3
      InsufficientDataActions: []
      OKActions:
        - !Ref MySNSTopic1
      Dimensions:
        - Name: "InstanceId"
          Value: !Ref InstanceId
      DatapointsToAlarm: 1
      EvaluateLowSampleCountPercentile: "ignore"
      ExtendedStatistic: "p99"
      Metrics: []
      Tags:
        - Key: "Name"
          Value: "DiskReadOpsAlarm"
        - Key: "use"
          Value: "ec2use"
        - Key: "env"
          Value: "prdss"
        - Key: "env"
          Value: "stg"
      ThresholdMetricId: ""
      TreatMissingData: "notBreaching"
      Unit: "Count"

  MyAlarm3:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmName: !Sub "${AWS::StackName}-NetworkIn-Alarm"
      AlarmDescription: "Alarm when NetworkIn exceeds threshold"
      MetricName: "NetworkIn"
      Namespace: "AWS/EC2"
      Statistic: "Sum"
      Period: 300
      EvaluationPeriods: 3
      Threshold: !FindInMap [AlarmThresholds, NetworkIn, Threshold]
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions:
        - !Ref MySNSTopic1
        - !Ref MySNSTopic2
        - !Ref MySNSTopic3
      InsufficientDataActions: []
      OKActions:
        - !Ref MySNSTopic1
      Dimensions:
        - Name: "InstanceId"
          Value: !Ref InstanceId
      DatapointsToAlarm: 1
      EvaluateLowSampleCountPercentile: "ignore"
      ExtendedStatistic: "p99"
      Metrics: []
      Tags:
        - Key: "Name"
          Value: "NetworkInAlarm"
      ThresholdMetricId: ""
      TreatMissingData: "notBreaching"
      Unit: "Bytes"

  MyEvent1:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${AWS::StackName}-Event1"
      ScheduleExpression: "rate(5 minutes)"
      State: "ENABLED"
      Targets:
        - Arn: !Ref MySNSTopic1
          Id: "MySNSTarget"

  MyEvent2:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${AWS::StackName}-Event2"
      ScheduleExpression: "rate(1 hour)"
      State: "ENABLED"
      Targets:
        - Arn: !Ref MySNSTopic2
          Id: "MySNSTarget"

  MyEvent3:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "${AWS::StackName}-Event3"
      ScheduleExpression: "rate(1 day)"
      State: "ENABLED"
      Targets:
        - Arn: !Ref MySNSTopic3
          Id: "MySNSTarget"

  MySNSTopic1:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "My SNSTopic1"

  MySNSTopic2:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "My SNSTopic2"

  MySNSTopic3:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "My SNSTopic3"

  MySNSTopic4:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "My SNSTopic4"

  MySNSTopic5:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "My SNSTopic5"

  MySNSTopic6:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "My SNSTopic6"

  MySNSTopic7:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "My SNSTopic7"

  MySNSTopic8:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "My SNSTopic8"

  MySNSTopic9:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "My SNSTopic9"

  MySNSTopic10:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "My SNSTopic10"

  MyLogGroup1:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${AWS::StackName}-LogGroup1"

  MyLogGroup2:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${AWS::StackName}-LogGroup2"

  MyLogGroup3:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${AWS::StackName}-LogGroup3"

Outputs:
  Alarm1Name:
    Description: "Name of the first CloudWatch alarm."
    Value: !Ref MyAlarm1

  Alarm2Name:
    Description: "Name of the second CloudWatch alarm."
    Value: !Ref MyAlarm2

  Alarm3Name:
    Description: "Name of the third CloudWatch alarm."
    Value: !Ref MyAlarm3
